/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Program Name: Gatherers (C)                                                                                             //
// Author: Jeffrey Bednar                                                                                                  //
// Copyright (c) Illusion Interactive, 2011 - 2025.                                                                        //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#ifndef _MESSAGE_H_
#define _MESSAGE_H_
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#include "common.h"
#include "common_types.h"
#include "windows_macros.h"
#include <windows.h>
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Forward declares:
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
typedef struct GLOBALS GLOBALS_T;
typedef struct LOG LOG_T;
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Types:
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
typedef struct MESSAGE {
    USHORT usType;
    short sLifespan;
    char szMessage[128];
    float fScale;
    float fAngle;
    struct MESSAGE_T* p_Next;
    FPOINT_T Location;
} MESSAGE_T;
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Prototypes:
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void    __cdecl     MESSAGE_Zero            (MESSAGE_T*);
void    __cdecl     MESSAGE_Create          (char*, FPOINT_T, USHORT, GLOBALS_T*, LOG_T*);
void    __cdecl     MESSAGE_DeleteSpecific  (MESSAGE_T*, GLOBALS_T*);
void    __cdecl     MESSAGE_DeleteAll       (GLOBALS_T*);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#endif
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
