/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Program Name: Gatherers (C)                                                                                             //
// Author: Jeffrey Bednar                                                                                                  //
// Copyright (c) Illusion Interactive, 2011 - 2025.                                                                        //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#ifndef _PICTURE_H_
#define _PICTURE_H_
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#include "common.h"
#include "common_types.h"
#include "Windows/windows_minified.h"
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Forward declares:
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
typedef struct LOG LOG_T;
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Types:
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
typedef struct PICTURE {
    FPOINT_T Location;
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    HBITMAP hBmp;
    HBITMAP hBmpMask;
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    BITMAP Bitmap;
    BITMAP BitmapMask;
} PICTURE_T;
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Prototypes:
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void                __cdecl     PICTURE_Zero                                    (PICTURE_T*);
void                __cdecl     PICTURE_Scale                                   (PICTURE_T*, PICTURE_T*, HWND, FDELTA_T, LOG_T*);
void                __cdecl     PICTURE_Load                                    (PICTURE_T*, FPOINT_T, char*, char*, LOG_T*);
void                __cdecl     PICTURE_Kill                                    (PICTURE_T*);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#endif
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
