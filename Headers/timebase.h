/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Program Name: Gatherers (C)                                                                                             //
// Author: Jeffrey Bednar                                                                                                  //
// Copyright (c) Illusion Interactive, 2011 - 2025.                                                                        //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#ifndef _TIMEBASE_H_
#define _TIMEBASE_H_
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#include "common.h"
#include "windows_macros.h"
#include <windows.h>
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Forward declares:
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
typedef struct GLOBALS GLOBALS_T;
typedef struct LOG LOG_T;
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Types:
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
typedef struct TIMEBASE {
    float fMsPerFrame;
    float fDifference;
    __int64 iFreq;
    __int64 iStartCount;
    __int64 iCountNow;
} TIMEBASE_T;
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Prototypes:
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void            __cdecl     TIMEBASE_Zero           (TIMEBASE_T*);
TIMEBASE_T*     __cdecl     TIMEBASE_Create         (float, GLOBALS_T*, LOG_T*);
UINT8           __cdecl     TIMEBASE_Tick           (TIMEBASE_T*);
void            __cdecl     TIMEBASE_StartTimer     (TIMEBASE_T*);
float           __cdecl     TIMEBASE_EndTimer       (TIMEBASE_T*);
void            __cdecl     TIMEBASE_Kill           (TIMEBASE_T*, GLOBALS_T*);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#endif
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
