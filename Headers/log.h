/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Program Name: Gatherers (C)                                                                                             //
// Author: Jeffrey Bednar                                                                                                  //
// Copyright (c) Illusion Interactive, 2011 - 2025.                                                                        //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#ifndef _LOG_H_
#define _LOG_H_
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#include "common.h"
#include "windows_macros.h"
#include <stdio.h>
#include <windows.h> 
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Forward declares:
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
typedef struct GLOBALS GLOBALS_T;
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Types:
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
typedef struct LOG {
    FILE* p_LogFile;
} LOG_T;
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Prototypes:
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void    __cdecl     LOG_Zero                (LOG_T*);
LOG_T*  __cdecl     LOG_Create              (const char*, GLOBALS_T*);
void    __cdecl     LOG_Append              (LOG_T*, const char*);
void    __cdecl     LOG_Flush               (LOG_T*, UINT8);
void    __cdecl     LOG_PopulateTimestamp   (char*, size_t);
void    __cdecl     LOG_Kill                (LOG_T*, GLOBALS_T*);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#endif
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
