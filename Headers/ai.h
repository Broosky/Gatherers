/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Program Name: Gatherers (C)                                                                                             //
// Author: Jeffrey Bednar                                                                                                  //
// Copyright (c) Illusion Interactive, 2011 - 2025.                                                                        //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#ifndef _AI_H_
#define _AI_H_
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#include "common.h"
#include "common_types.h"
#include "windows_macros.h"
#include <windows.h>
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Forward declares:
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
typedef struct ENTITY ENTITY_T;
typedef struct GLOBALS GLOBALS_T;
typedef struct LOG LOG_T;
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Types:
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
typedef struct PATH_NODE {
    // Interpolate curve.
    FPOINT_T Location;
    struct PATH_NODE* p_Next;
    struct PATH_NODE* p_Previous;
} PATH_NODE_T;
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
typedef struct AI_CLOSEST {
    float fDistance;
    ENTITY_T* p_Entity;
} AI_CLOSEST_T;
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Prototypes:
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
ENTITY_T*       __cdecl AI_FindClosest              (ENTITY_T*, USHORT, GLOBALS_T*);
void            __cdecl AI_HandleWorkers            (ENTITY_T*, GLOBALS_T*, LOG_T*);
AI_CLOSEST_T*   __cdecl AI_FindClosestByDistance    (ENTITY_T*, USHORT, size_t*, USHORT*, GLOBALS_T*, LOG_T*);
int             __cdecl AI_CompareDistances         (const void*, const void*);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#endif
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
